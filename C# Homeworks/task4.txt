using System;

class KnightTour
{
    static int N = 8;
    static int[,] chessboard = new int[N, N];
    static Random rand = new Random();

    static void Main()
    {
        int startRow = rand.Next(N);
        int startCol = rand.Next(N);

        MoveKnight(startRow, startCol);

        DisplayChessboard();
    }

    static void MoveKnight(int row, int col)
    {
        chessboard[row, col] = 1;

        int[] moveRow = { 2, 1, -1, -2, -2, -1, 1, 2 };
        int[] moveCol = { 1, 2, 2, 1, -1, -2, -2, -1 };

        ShuffleMoves(moveRow, moveCol);

        for (int i = 0; i < 8; i++)
        {
            int newRow = row + moveRow[i];
            int newCol = col + moveCol[i];

            if (IsValidMove(newRow, newCol) && chessboard[newRow, newCol] == 0)
            {
                MoveKnight(newRow, newCol);
                break;
            }
        }
    }

    static bool IsValidMove(int row, int col)
    {
        return (row >= 0 && row < N && col >= 0 && col < N);
    }

    static void ShuffleMoves(int[] moveRow, int[] moveCol)
    {
        for (int i = 7; i > 0; i--)
        {
            int j = rand.Next(i + 1);
            (moveRow[i], moveRow[j]) = (moveRow[j], moveRow[i]);
            (moveCol[i], moveCol[j]) = (moveCol[j], moveCol[i]);
        }
    }

    static void DisplayChessboard()
    {
        for (int i = 0; i < N; i++)
        {
            for (int j = 0; j < N; j++)
            {
                Console.Write(chessboard[i, j].ToString().PadLeft(3) + " ");
            }
            Console.WriteLine();
        }
    }
}
