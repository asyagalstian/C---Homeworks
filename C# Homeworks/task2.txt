using System;

class QueenMoves
{
    static void Main()
    {
        int[,] chessboard = new int[8, 8];
        int startRow = 3;
        int startCol = 3;

        ShowQueenMoves(chessboard, startRow, startCol);
        DisplayChessboard(chessboard);
    }

    static void ShowQueenMoves(int[,] chessboard, int row, int col)
    {
        for (int i = 0; i < 8; i++)
        {
            chessboard[row, i] = 1; // Mark the row
            chessboard[i, col] = 1; // Mark the column

            if (IsValidMove(row + i, col + i)) chessboard[row + i, col + i] = 1; // Mark the diagonal (bottom-right)
            if (IsValidMove(row - i, col - i)) chessboard[row - i, col - i] = 1; // Mark the diagonal (top-left)
            if (IsValidMove(row + i, col - i)) chessboard[row + i, col - i] = 1; // Mark the diagonal (bottom-left)
            if (IsValidMove(row - i, col + i)) chessboard[row - i, col + i] = 1; // Mark the diagonal (top-right)
        }
    }

    static bool IsValidMove(int row, int col)
    {
        return (row >= 0 && row < 8 && col >= 0 && col < 8);
    }

    static void DisplayChessboard(int[,] chessboard)
    {
        for (int i = 0; i < 8; i++)
        {
            for (int j = 0; j < 8; j++)
            {
                Console.Write(chessboard[i, j].ToString().PadLeft(3) + " ");
            }
            Console.WriteLine();
        }
    }
}
